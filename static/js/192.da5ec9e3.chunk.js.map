{"version":3,"file":"static/js/192.da5ec9e3.chunk.js","mappings":"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","sources":["pages/administrator/students/student-add.js"],"sourcesContent":["import React, { useRef, useState } from 'react'\nimport { useForm } from 'react-hook-form';\nimport { useCreateStudentMutation, useCreateUserMutation, useGetStudentProfilesQuery, useUpdateStudentProfileMutation } from '../../../service';\nimport { useNavigate } from 'react-router-dom';\nimport UserPlusIcon from '@heroicons/react/24/outline/UserPlusIcon';\nimport { toast } from 'react-toastify';\n\nfunction StudentsAdd() {\n  const { register, handleSubmit, watch, formState: { errors } } = useForm();\n  const [createStudent] = useCreateStudentMutation();\n  const studentProfileQuery = useGetStudentProfilesQuery();\n  const [updateStudentProfile] = useUpdateStudentProfileMutation()\n  const navigate = useNavigate()\n  const [isChecked, setIsChecked] = useState(false);\n  const notifySuccess = (str) => toast(str, {type:'success'});\n  const notifyError = (str) => toast(str, {type:'error'});\n\n  const handleCheckboxChange = (event) => {\n    setIsChecked(event.target.checked);\n  };\n\n\n  const onSubmit = data => {\n    createStudent({\n      ...data,\n    }).unwrap()\n    .then(fulfilled => {\n      console.log('fulfilled ', fulfilled);\n      studentProfileQuery.refetch().then(data => {\n        const profile = data.data.filter(sp => sp.user == fulfilled.id)[0];\n        updateStudentProfile(\n          {\n            ...profile, \n            is_group_leader :isChecked ,\n          }\n        ).unwrap()\n        .then(fulfilled2 => {\n          console.log(fulfilled2)\n          notifySuccess('Student Account created Successfuly')\n        })\n        .catch(rejected =>{ \n          console.error(rejected)\n          notifyError('Error Creating Student Account.')\n        })\n\n      })\n      navigate('/app/accounts')\n    })\n    .catch(rejected => {\n      console.error(rejected)\n      notifyError(rejected)\n    })\n  }\n\n  return (\n    <div className=\"flex flex-col w-full\">\n      <div className=\"card bg-base-100 shadow-xl mb-4\">\n        <div className=\"card-body items-center flex flex-row\">\n          <UserPlusIcon className={`h-6 w-6`}/>\n          <h1 className='font-semibold '>Add a Student</h1>\n         </div>\n      </div>\n      <form onSubmit={handleSubmit(onSubmit)} className='items-center flex flex-col'>\n      \n        <div className=\"form-control w-full max-w-xs\">\n          <label className=\"label\">\n            <span className=\"label-text\">What is your email?</span>\n          </label>\n          <input \n            {...register(\"email\", { required: true })}\n            type=\"email\" \n            placeholder=\"Type here\" \n            className=\"input input-bordered w-full max-w-xs\" />\n          {errors.email && <span className='text-red-400'>This field is required</span>}\n        </div>\n\n        <div className=\"form-control w-full max-w-xs\">\n          <label className=\"label\">\n            <span className=\"label-text\">What is your first name?</span>\n          </label>\n          <input \n            {...register(\"first_name\", { required: true })}\n            type=\"text\" \n            placeholder=\"Type here\" \n            className=\"input input-bordered w-full max-w-xs\" />\n          {errors.first_name && <span className='text-red-400'>This field is required</span>}\n        </div>\n\n        <div className=\"form-control w-full max-w-xs\">\n          <label className=\"label\">\n            <span className=\"label-text\">What is your last name?</span>\n          </label>\n          <input \n            {...register(\"last_name\", { required: true })}\n            type=\"text\" \n            placeholder=\"Type here\" \n            className=\"input input-bordered w-full max-w-xs\" />\n          {errors.last_name && <span className='text-red-400'>This field is required</span>}\n        </div>\n\n        \n        <div className=\"form-control w-full max-w-xs\">\n          <label className=\"label\">\n            <span className=\"label-text\">What is your password?</span>\n          </label>\n          <input \n            {...register(\"password\", { required: true })}\n            type=\"password\" \n            placeholder=\"Type here\" \n            autoComplete='current-password'\n            className=\"input input-bordered w-full max-w-xs\" />\n          {errors.password && <span className='text-red-400'>This field is required</span>}\n        </div>\n\n        <div className=\"form-control w-full max-w-xs\">\n          <label className=\"label marker:cursor-pointer\">\n            <span className=\"label-text\">is He/She a group leader ?</span>\n          </label>\n          <input \n            type=\"checkbox\"  \n            className=\"checkbox checkbox-secondary\" \n            checked={isChecked}\n            onChange={handleCheckboxChange}\n          />\n        </div>\n      \n        <input type=\"submit\" className=\"btn btn-primary  w-full max-w-xs my-2\" />\n\n      </form>\n    </div>\n\n  )\n}\n\nexport default StudentsAdd"],"names":["_useForm","useForm","register","handleSubmit","errors","watch","formState","_useCreateStudentMuta","useCreateStudentMutation","createStudent","_slicedToArray","studentProfileQuery","useGetStudentProfilesQuery","_useUpdateStudentProf","useUpdateStudentProfileMutation","updateStudentProfile","navigate","useNavigate","_useState","useState","_useState2","isChecked","setIsChecked","notifyError","str","toast","type","_jsxs","className","children","_jsx","UserPlusIcon","onSubmit","data","_objectSpread","unwrap","then","fulfilled","console","log","refetch","profile","filter","sp","user","id","is_group_leader","fulfilled2","catch","rejected","error","required","placeholder","email","first_name","last_name","autoComplete","password","checked","onChange","event","target"],"sourceRoot":""}